* Notes:
* The following parameters are modeled: 
* Input Offset Voltage, Input Bias Current, VIH/VIL, DC CMRR,
* small signal freq response, Input Referred Voltage Noise, Slew Rate,
* Short Circuit Output Current, VOH/VOL,
* Iq_on, Iq_off, PSRR
*
*****************************************************************************

*TLV342 Pin configuration
*Pin 1 = 1OUT, Pin 8 = V+
*Pin 2 = 1IN-, Pin 7 = 2OUT
*Pin 3 = 1IN+, Pin 6 = 2IN-
*Pin 4 = GND , Pin 5 = 2IN+

*.SUBCKT TLV342 1 2 3 4 5 6 7 8 
.SUBCKT TLV342 3 2 8 4 1 
X1 4 8 2 3 1 PD opamp
*X2 4 8 6 5 7 PD opamp
VPD PD 0 100
.ENDS


.subckt opamp VEE VCC VINM VINP VOUT PD
XI13 VEE_INT VEE ANALOG_BUFFER
XI12 VCC_INT VCC ANALOG_BUFFER
XI58 NET39 NET66 TLV342_DOMPOLE_HT2
XI28 NET0121 NET0170 VCC_INT VEE_INT TLV342_RECOVERYCIRCUIT_HT2
XI26 NET0170 NET086 TLV342_NONDOMPOLE_HT2
XI30 POWER VCC_INT VCC VEE_INT VEE NET086 VOUT TLV342_OUTPUTCIR_HT2
IBIASP NET041 0 {1p - 0.5p - 3f }
IBIASM NET065 0 {1p - 1.1p + 3f }
XI56 VCC_INT VEE_INT NET0155 NET065 TLV342_VINRANGE_HT2
XI54 VCC_INT VEE_INT NET0214 NET041 TLV342_VINRANGE_HT2
XI53 VINP VINM NET048 NET8 TLV342_ZIN_HT2
XI40 VCC VEE POWER VEE_INT VCC_INT TLV342_Iq_HT2
XI52 NET041 NET065 NET66 NET67 VEE_INT VCC_INT POWER TLV342_GmItail_HT2
XAHDLINV3 PD NET0109 VCC_INT VEE_INT HPA_INV_IDEAL
XAHDLINV1 NET0109 POWER VCC_INT VEE_INT HPA_INV_IDEAL
XI21 NET066 NET0155 TLV342_CMRR_HT2
XI19 VCC_INT VEE_INT NET8 NET066 TLV342_PSRR_HT2
XI18 NET058 NET8 TLV342_Inoise_HT2
XI17 NET048 NET058 TLV342_Vnoise_HT2
R14 VCC_INT PD 10e6
VINOFFSET NET0214 NET058 300e-6
VPROBE1 NET67 NET39
VDOMPOLEBIAS NET66 0 0
VPROBE2 NET39 NET0121
.ends 





.subckt ANALOG_BUFFER VOUT VIN
R0 VIN 0 1e9
R1 VOUT 0 1e9
E0 VOUT 0 VIN 0 1
.ends ANALOG_BUFFER


.subckt TLV342_DOMPOLE_HT2 A B
R0 B A 11e6
C0 A B 950e-12
.ends TLV342_DOMPOLE_HT2


.subckt TLV342_RECOVERYCIRCUIT_HT2 A B VCC VEE
DRECL NET9 NET014 RecoveryCircuit_DIDEAL
DRECH NET014 NET8 RecoveryCircuit_DIDEAL
VBRIDGE NET014 A 0
VPROBE A B 0
VRECL NET9 VEE -200
VRECH VCC NET8 -200
.ends TLV342_RECOVERYCIRCUIT_HT2


.subckt TLV342_NONDOMPOLE_HT2 VIN VOUT
XI23 NET4 VIN ANALOG_BUFFER
C1 VOUT 0 50e-9
R1 VOUT NET4 1
.ends TLV342_NONDOMPOLE_HT2


.subckt TLV342_OUTPUTCIR_HT2 PD VCC VCCMAIN VEE VEEMAIN VIN VOUT
XI0 VCCMAIN VEEMAIN VIMON PD TLV342_OutputCir_ILOAD_HT2
XI1 NET53 NET22 VIMON TLV342_OutputCir_Rout_HT2
XI6 NET22 NET0100 0 NET043 VCC VEE RECOVERYSIGNAL TLV342_OutputCir_RecoveryAssist_HT2
XAHDLI43 NET055 NET054 RECOVERYSIGNAL VCC VEE HPA_OR2
XAHDLI41 VOUT NET067 NET055 VCC VEE HPA_COMP_IDEAL
XAHDLI42 NET059 VOUT NET054 VCC VEE HPA_COMP_IDEAL
HVIMON VIMON 0 VCURSOURCEDETECT  1
RVIMON VIMON 0 1e9
RISC NET092 NET15 100e-3
ROUTMINOR NET0100 NET17 1
XI11 NET0129 NET15 ANALOG_BUFFER
XI2 NET22 VIN ANALOG_BUFFER
DVOL VOL NET15 OutputCir_VOHVOL_DIDEAL
DVOH NET15 VOH OutputCir_VOHVOL_DIDEAL
DISOURCE NET092 NET75 OutputCir_Isc_DIDEAL
DISINK NET0129 NET79 OutputCir_Isc_DIDEAL
VPROBE2 NET043 NET0100 0
VTRIGGERVOL NET059 VOL 10e-3
VTRIGGERVOH VOH NET067 10e-3
VVOL NET31 VEE 5e-3
VCURSOURCEDETECT NET15 NET34 0
VCURSINKDETECT VOUT NET34 0
VVOH VCC NET41 5e-3
VPROBE1 NET53 NET17 0
HVOH NET41 VOH POLY(1) Vcursourcedetect  0  5  0  0  1e-9  0  0  0  0  0  1e-9
HVOL VOL NET31 POLY(1) Vcursinkdetect  0  5  0  0  1e-9  0  0  0  0  0  1e-9
LOUT NET17 NET092 1e-9
COUT NET22 NET0100 1e-12
EISOURCE NET75 NET0129 POLY(1) VCC VEE  -4.3125e-3  3.0625e-3
EISINK NET79 NET092 POLY(1) VCC VEE  -3.0625e-3  2.8125e-3
.ends TLV342_OUTPUTCIR_HT2


.subckt TLV342_VINRANGE_HT2 VCC VEE VIN VOUT
V0 NET22 VOUT 0
VIL NET14 VEE -200e-3
VIH VCC NET19 600e-3
DIL NET14 NET22 Vinrange_DIDEAL
DIH NET22 NET19 Vinrange_DIDEAL
R0 VIN NET22 1e-3
.ends TLV342_VINRANGE_HT2


.subckt TLV342_ZIN_HT2 IN1 IN2 OUT1 OUT2
C3 OUT1 OUT2 1e-15
C2 OUT2 0 1e-15
C1 0 OUT1 1e-15
R2 IN2 OUT2 100e-3
R1 IN1 OUT1 100e-3
R3 OUT1 OUT2 1e9
.ends TLV342_ZIN_HT2







.SUBCKT HPA_OR2 1 2 3 VDD VSS
E1 4 0 VALUE = { IF( ((V(1)< (V(VDD)+V(VSS))/2 ) & (V(2)< (V(VDD)+V(VSS))/2 )), V(VSS), V(VDD) ) }
R1 4 3 1
C1 3 0 1e-12
.ENDS


.SUBCKT HPA_INV_IDEAL 1 2 VDD VSS
E1 2 0 VALUE = { IF( V(1)> (V(VDD)+V(VSS))/2, V(VSS), V(VDD) ) }
.ENDS


.SUBCKT HPA_COMP_IDEAL INP INN OUT VDD VSS
E1 OUT 0 VALUE = { IF( (V(INP) > V(INN)), V(VDD), V(VSS) ) }
.ENDS


.SUBCKT TLV342_CMRR_HT2 A B

X1 A B 0 CMRR_NEW PARAMS: CMRR = 85 FCMRR = 30k
.ENDS


.SUBCKT TLV342_GmItail_HT2  Vinp Vinm Ioutp Ioutm VEE VCC PD


X1 PD PDINV VCC VEE LOGIC1 0 DLSINV
VLOGIC1 LOGIC1 0 1


.PARAM ITAILMAX_X1 = { 3.0 }
.PARAM ITAILMAX_Y1 = { 1m }

.PARAM ITAILMAX_X2 = { 5.0 }
.PARAM ITAILMAX_Y2 = { 1m }

.PARAM ITAILMAX_SLOPE = 
+ { ( ITAILMAX_Y2 - ITAILMAX_Y1 ) / ( ITAILMAX_X2 - ITAILMAX_X1 ) }
.PARAM ITAILMAX_INTCP = 
+ { ITAILMAX_Y1 - ITAILMAX_SLOPE * ITAILMAX_X1 }

EITAILMAX ITAILMAX 0 VALUE = 
+ { ITAILMAX_SLOPE * V(VCC,VEE) + ITAILMAX_INTCP  }


.PARAM ITAILMIN_X1 = { 3.0 }
.PARAM ITAILMIN_Y1 = { 1m }

.PARAM ITAILMIN_X2 = { 5.0 }
.PARAM ITAILMIN_Y2 = { 1m }

.PARAM ITAILMIN_SLOPE = 
+ { ( ITAILMIN_Y2 - ITAILMIN_Y1 ) / ( ITAILMIN_X2 - ITAILMIN_X1 ) }
.PARAM ITAILMIN_INTCP = 
+ { ITAILMIN_Y1 - ITAILMIN_SLOPE * ITAILMIN_X1 }

EITAILMIN ITAILMIN 0 VALUE = 
+ { ITAILMIN_SLOPE * V(VCC,VEE) + ITAILMIN_INTCP  }


G1 IOUTP IOUTM VALUE = { LIMIT ( 17m * V(VINP,VINM) * ( 1-V(PDINV) ) , -V(ITAILMIN), V(ITAILMAX) ) }

.ENDS


.SUBCKT TLV342_Inoise_HT2 A B
.PARAM X = { 1  }
.PARAM Y = { 2 }
.PARAM Z = { 1 }
X1 A B FEMT PARAMS: NLFF = { Y }  FLWF = { X } NVRF = { Z }
.ENDS


.subckt TLV342_Iq_HT2 VCCmain VEEmain PD VEE VCC





.PARAM IOFF = { 0.01u }

.PARAM ION_X1 = { 3.0 }
.PARAM ION_Y1 = { 75u }

.PARAM ION_X2 = { 5.0 }
.PARAM ION_Y2 = { 75u }

.PARAM ION_SLOPE = 
+ { ( ION_Y2 - ION_Y1 ) / ( ION_X2 - ION_X1 ) }
.PARAM ION_INTCP = 
+ { ION_Y1 - ION_SLOPE * ION_X1 }

EION ION 0 VALUE = 
+ { ION_SLOPE * V(VCC,VEE) + ION_INTCP  }



X1 PD PDINV VCC VEE LOGIC1 0 DLSINV
VLOGIC1 LOGIC1 0 1

G1 VCCMAIN VEEMAIN VALUE = 
+ { ( ION_INTCP + ION_SLOPE * V(VCC,VEE) ) * ( 1-V(PDINV) ) + IOFF * V(PDINV) }  

.ends


.SUBCKT TLV342_OutputCir_ILOAD_HT2  VDD VSS VIMON PD
X1 PD PDINV VDD VSS LOGIC1 0 DLSINV
VLOGIC1 LOGIC1 0 1

G1 VDD 0 VALUE = {IF(V(VIMON) >= 0, V(VIMON)*( 1-V(PDINV) ), 0)}
G2 VSS 0 VALUE = {IF(V(VIMON)  < 0, V(VIMON)*( 1-V(PDINV) ), 0)}

.ENDS


.SUBCKT TLV342_OutputCir_RecoveryAssist_HT2  VINP VINM IOUTP IOUTM VCC VEE RecoverySignal

X1 RecoverySignal RS VCC VEE LOGIC1 0 DLS
VLOGIC1 LOGIC1 0 1

G1 IOUTP IOUTM VALUE = { LIMIT ( 1m * V(VINP,VINM) *  V(RS) , -100m, 100m ) }

.ENDS


.SUBCKT TLV342_OutputCir_Rout_HT2 B A VIMON
.PARAM Ro_Iout_0A = 200
.PARAM Multiplier = 0





G1 A B VALUE = { V(A,B) * 1/ LIMIT ( ( Ro_Iout_0A - Multiplier * ABS( V(VIMON) ) ), 1m, 1e6 ) }

.ENDS


.SUBCKT TLV342_PSRR_HT2 VDD VSS A B

X1 VDD VSS A B 0 PSRR_DUAL_NEW PARAMS:
+ PSRRP = 95 FPSRRP = 300
+ PSRRN = 95 FPSRRN = 300
.ENDS


.SUBCKT TLV342_Vnoise_HT2 A B
.PARAM X = { 100 }
.PARAM Y = { 60  }
.PARAM Z = { 33  }
X1 A B VNSE PARAMS: NLF = { Y } FLW = { X }  NVR = { Z }
.ENDS












.SUBCKT VNSE  1 2 PARAMS: NLF = 10 FLW = 4  NVR = 4.6
.PARAM GLF={PWR(FLW,0.25)*NLF/1164}
.PARAM RNV={1.184*PWR(NVR,2)}
.MODEL DVN D KF={PWR(FLW,0.5)/1E11} IS=1.0E-16
I1 0 7 10E-3
I2 0 8 10E-3
D1 7 0 DVN
D2 8 0 DVN
E1 3 6 7 8 {GLF}
R1 3 0 1E9
R2 3 0 1E9
R3 3 6 1E9
E2 6 4 5 0 10
R4 5 0 {RNV}
R5 5 0 {RNV}
R6 3 4 1E9
R7 4 0 1E9
E3 1 2 3 4 1
C1 1 0 1E-15
C2 2 0 1E-15
C3 1 2 1E-15
.ENDS



.SUBCKT FEMT  1 2 PARAMS: NLFF = 0.1 FLWF = 0.001 NVRF = 0.1
.PARAM GLFF={PWR(FLWF,0.25)*NLFF/1164}
.PARAM RNVF={1.184*PWR(NVRF,2)}
.MODEL DVNF D KF={PWR(FLWF,0.5)/1E11} IS=1.0E-16
I1 0 7 10E-3
I2 0 8 10E-3
D1 7 0 DVNF
D2 8 0 DVNF
E1 3 6 7 8 {GLFF}
R1 3 0 1E9
R2 3 0 1E9
R3 3 6 1E9
E2 6 4 5 0 10
R4 5 0 {RNVF}
R5 5 0 {RNVF}
R6 3 4 1E9
R7 4 0 1E9
G1 1 2 3 4 1E-6
C1 1 0 1E-15
C2 2 0 1E-15
C3 1 2 1E-15
.ENDS






.SUBCKT PSRR_SINGLE   VDD  VSS  VI  VO  GNDF PARAMS: PSRR = 130 FPSRR = 1.6
.PARAM PI = 3.141592
.PARAM RPSRR = 1
.PARAM GPSRR = {PWR(10,-PSRR/20)/RPSRR}
.PARAM LPSRR = {RPSRR/(2*PI*FPSRR)}
G1  GNDF 1 VDD VSS {GPSRR}
R1  1 2 {RPSRR}
L1  2 GNDF {LPSRR}
E1  VO VI 1 GNDF 1
C2  VDD VSS 10P
.ENDS

.SUBCKT PSRR_SINGLE_NEW   VDD  VSS  VI  VO  GNDF PARAMS: PSRR = 130 FPSRR = 1.6
.PARAM PI = 3.141592
.PARAM RPSRR = 1
.PARAM GPSRR = {PWR(10,-PSRR/20)/RPSRR}
.PARAM LPSRR = {RPSRR/(2*PI*FPSRR)}
G1  GNDF 1 VDD VSS {GPSRR}
R1  1 2 {RPSRR}
L1  2 GNDF {LPSRR}

EA  101 GNDF 1 GNDF 1
GRA  101 102 VALUE = { V(101,102)/1e6 }
CA  102 GNDF 1e3
EB  1 1a VALUE = {V(102,GNDF)}

E1  VO VI 1a GNDF 1
C2  VDD VSS 10P
.ENDS

.SUBCKT PSRR_DUAL   VDD  VSS  VI  VO  GNDF 
+ PARAMS: PSRRP = 130 FPSRRP = 1.6
+ PSRRN = 130 FPSRRN = 1.6
.PARAM PI = 3.141592
.PARAM RPSRRP = 1
.PARAM GPSRRP = {PWR(10,-PSRRP/20)/RPSRRP}
.PARAM LPSRRP = {RPSRRP/(2*PI*FPSRRP)}
.PARAM RPSRRN = 1
.PARAM GPSRRN = {PWR(10,-PSRRN/20)/RPSRRN}
.PARAM LPSRRN = {RPSRRN/(2*PI*FPSRRN)}
G1  GNDF 1 VDD GNDF {GPSRRP}
R1  1 2 {RPSRRP}
L1  2 GNDF {LPSRRP}

G2  GNDF 3 VSS GNDF {GPSRRN}
R2  3 4 {RPSRRN}
L2  4 GNDF {LPSRRN}

E1  VO VI VALUE = {V(1,GNDF) + V(3,GNDF)}
C3  VDD VSS 10P
.ENDS

.SUBCKT PSRR_DUAL_NEW   VDD  VSS  VI  VO  GNDF 
+ PARAMS: PSRRP = 130 FPSRRP = 1.6
+ PSRRN = 130 FPSRRN = 1.6
.PARAM PI = 3.141592
.PARAM RPSRRP = 1
.PARAM GPSRRP = {PWR(10,-PSRRP/20)/RPSRRP}
.PARAM LPSRRP = {RPSRRP/(2*PI*FPSRRP)}
.PARAM RPSRRN = 1
.PARAM GPSRRN = {PWR(10,-PSRRN/20)/RPSRRN}
.PARAM LPSRRN = {RPSRRN/(2*PI*FPSRRN)}

G1  GNDF 1 VDD GNDF {GPSRRP}
R1  1 2 {RPSRRP}
L1  2 GNDF {LPSRRP}

EA  101 GNDF 1 GNDF 1
GRA  101 102 VALUE = { V(101,102)/1e6 }
CA  102 GNDF 1e3
EB  1 1a VALUE = {V(102,GNDF)}


G2  GNDF 3 VSS GNDF {GPSRRN}
R2  3 4 {RPSRRN}
L2  4 GNDF {LPSRRN}

EC  301 GNDF 3 GNDF 1
GRC  301 302 VALUE = { V(301,302)/1e6 }
CC  302 GNDF 1e3
ED  3 3a VALUE = {V(302,GNDF)}


E1  VO VI VALUE = {V(1a,GNDF) + V(3a,GNDF)}
C3  VDD VSS 10P
.ENDS



.SUBCKT CMRR   VI  VO  GNDF PARAMS: CMRR = 130 FCMRR = 1.6K
.PARAM PI = 3.141592
.PARAM RCMRR = 1
.PARAM GCMRR = {PWR(10,-CMRR/20)/RCMRR}
.PARAM LCMRR = {RCMRR/(2*PI*FCMRR)}
G1  GNDF 1 VI GNDF {GCMRR}
R1  1 2 {RCMRR}
L1  2 GNDF {LCMRR}
E1  VI VO 1 GNDF 1
.ENDS

.SUBCKT CMRR_NEW   VI  VO  GNDF PARAMS: CMRR = 130 FCMRR = 1.6K
.PARAM PI = 3.141592
.PARAM RCMRR = 1
.PARAM GCMRR = {PWR(10,-CMRR/20)/RCMRR}
.PARAM LCMRR = {RCMRR/(2*PI*FCMRR)}
G1  GNDF 1 VI GNDF {GCMRR}
R1  1 2 {RCMRR}
L1  2 GNDF {LCMRR}

EA  101 GNDF 1 GNDF 1
GRA  101 102 VALUE = {V(101,102)/1e6}
CA  102 GNDF 1e3
EB  1 1a VALUE = {V(102,GNDF)}

E1  VI VO 1a GNDF 1
.ENDS



.SUBCKT DLS 1 2 VDD_OLD VSS_OLD VDD_NEW VSS_NEW
E1 3 0 VALUE = { IF( V(1) < (V(VDD_OLD)+V(VSS_OLD))/2, V(VSS_NEW), V(VDD_NEW) ) }
R1 3 2 1
C1 2 0 1p
.ENDS


.SUBCKT DLSINV 1 2 VDD_OLD VSS_OLD VDD_NEW VSS_NEW
E1 3 0 VALUE = { IF( V(1) > (V(VDD_OLD)+V(VSS_OLD))/2, V(VSS_NEW), V(VDD_NEW) ) }
R1 3 2 1
C1 2 0 1p
.ENDS


.MODEL VINRANGE_DIDEAL         D N=10m
.MODEL RECOVERYCIRCUIT_DIDEAL  D N=10m
.MODEL OUTPUTCIR_ISC_DIDEAL    D N=0.1m
.MODEL OUTPUTCIR_VOHVOL_DIDEAL D N=1m







